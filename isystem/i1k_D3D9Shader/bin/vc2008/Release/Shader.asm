; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\Matt\Desktop\C++Projects\DemoScene\isystem\i1k_D3D9Shader\src\Shader.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0Shader@@QAE@XZ				; Shader::Shader
; Function compile flags: /Ogspy
; File c:\users\matt\desktop\c++projects\demoscene\isystem\i1k_d3d9shader\src\shader.cpp
;	COMDAT ??0Shader@@QAE@XZ
_TEXT	SEGMENT
??0Shader@@QAE@XZ PROC					; Shader::Shader, COMDAT
; _this$ = ecx

; 5    : {

	mov	eax, ecx

; 6    : 	psShader = NULL;

	and	DWORD PTR [eax], 0

; 7    : 	vsShader = NULL;

	and	DWORD PTR [eax+4], 0

; 8    : }

	ret	0
??0Shader@@QAE@XZ ENDP					; Shader::Shader
_TEXT	ENDS
PUBLIC	??1Shader@@QAE@XZ				; Shader::~Shader
; Function compile flags: /Ogspy
;	COMDAT ??1Shader@@QAE@XZ
_TEXT	SEGMENT
??1Shader@@QAE@XZ PROC					; Shader::~Shader, COMDAT
; _this$ = ecx

; 11   : {

	push	esi
	mov	esi, ecx

; 12   : 	if(psShader != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@Shader

; 13   : 		psShader->Release();

	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$LN2@Shader:

; 14   : 	if(vsShader != NULL)

	cmp	DWORD PTR [esi+4], 0
	je	SHORT $LN1@Shader

; 15   : 		vsShader->Release();

	mov	esi, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	push	esi
	call	DWORD PTR [eax+8]
$LN1@Shader:
	pop	esi

; 16   : }

	ret	0
??1Shader@@QAE@XZ ENDP					; Shader::~Shader
_TEXT	ENDS
PUBLIC	??_C@_07IOPKFNAJ@vs_main?$AA@			; `string'
PUBLIC	??_C@_07EIJFFEIO@ps_main?$AA@			; `string'
PUBLIC	?CompileFromStream@Shader@@QAEXPAUIDirect3DDevice9@@PBD1@Z ; Shader::CompileFromStream
EXTRN	_D3DXGetVertexShaderProfile@4:PROC
EXTRN	__imp__DebugBreak@0:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	_D3DXCompileShader@40:PROC
EXTRN	_D3DXGetPixelShaderProfile@4:PROC
;	COMDAT ??_C@_07IOPKFNAJ@vs_main?$AA@
CONST	SEGMENT
??_C@_07IOPKFNAJ@vs_main?$AA@ DB 'vs_main', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EIJFFEIO@ps_main?$AA@
CONST	SEGMENT
??_C@_07EIJFFEIO@ps_main?$AA@ DB 'ps_main', 00H		; `string'
; Function compile flags: /Ogspy
CONST	ENDS
;	COMDAT ?CompileFromStream@Shader@@QAEXPAUIDirect3DDevice9@@PBD1@Z
_TEXT	SEGMENT
_tmpPS$ = -16						; size = 4
_tmpVS$ = -12						; size = 4
_this$ = -8						; size = 4
tv77 = -4						; size = 4
_errors$ = 8						; size = 4
_d3dDevice$ = 8						; size = 4
tv138 = 12						; size = 4
_psShaderCode$ = 12					; size = 4
_vsShaderCode$ = 16					; size = 4
?CompileFromStream@Shader@@QAEXPAUIDirect3DDevice9@@PBD1@Z PROC ; Shader::CompileFromStream, COMDAT
; _this$ = ecx

; 19   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 20   : 	ID3DXBuffer *tmpPS;
; 21   : 	ID3DXBuffer *tmpVS;
; 22   :     #ifndef DEBUG
; 23   : 	D3DXCompileShader( vsShaderCode, sizeof(vsShaderCode)-1, 0, 0, "vs_main", D3DXGetVertexShaderProfile(d3dDevice), D3DXSHADER_OPTIMIZATION_LEVEL3|D3DXSHADER_PREFER_FLOW_CONTROL, &tmpVS, 0, 0 );
; 24   :     D3DXCompileShader( psShaderCode, sizeof(psShaderCode)-1, 0, 0, "ps_main", D3DXGetPixelShaderProfile(d3dDevice), D3DXSHADER_OPTIMIZATION_LEVEL3|D3DXSHADER_PREFER_FLOW_CONTROL, &tmpPS, 0, 0 );
; 25   :     #else
; 26   :     ID3DXBuffer *errors;
; 27   : 	DWORD shaderFlag = D3DXSHADER_DEBUG*0+1*(D3DXSHADER_OPTIMIZATION_LEVEL3|D3DXSHADER_PREFER_FLOW_CONTROL|D3DXSHADER_PACKMATRIX_ROWMAJOR);
; 28   :     if( D3DXCompileShader( psShaderCode, strlen(psShaderCode), 0, 0, "ps_main", D3DXGetPixelShaderProfile(d3dDevice), shaderFlag, &tmpPS, &errors, 0 ) <0 )

	mov	eax, DWORD PTR _psShaderCode$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	lea	esi, DWORD PTR [eax+1]
	xor	ebx, ebx
$LL5@CompileFro:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL5@CompileFro
	mov	edi, DWORD PTR _d3dDevice$[ebp]
	sub	eax, esi
	push	ebx
	mov	DWORD PTR tv77[ebp], eax
	lea	eax, DWORD PTR _errors$[ebp]
	push	eax
	lea	eax, DWORD PTR _tmpPS$[ebp]
	push	eax
	mov	esi, 33800				; 00008408H
	push	esi
	push	edi
	call	_D3DXGetPixelShaderProfile@4
	push	eax
	push	OFFSET ??_C@_07EIJFFEIO@ps_main?$AA@
	push	ebx
	push	ebx
	push	DWORD PTR tv77[ebp]
	push	DWORD PTR _psShaderCode$[ebp]
	call	_D3DXCompileShader@40
	test	eax, eax
	jge	SHORT $LN2@CompileFro

; 29   :     {
; 30   :         OutputDebugString( (char*)errors->GetBufferPointer() );

	mov	eax, DWORD PTR _errors$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+12]
	push	eax
	call	DWORD PTR __imp__OutputDebugStringA@4

; 31   :         errors->Release();

	mov	eax, DWORD PTR _errors$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]

; 32   :         DebugBreak();

	call	DWORD PTR __imp__DebugBreak@0
$LN2@CompileFro:

; 33   :     }
; 34   : 	if( D3DXCompileShader( vsShaderCode, strlen(vsShaderCode), 0, 0, "vs_main", D3DXGetVertexShaderProfile(d3dDevice), shaderFlag, &tmpVS, &errors, 0 ) <0 )

	mov	eax, DWORD PTR _vsShaderCode$[ebp]
	lea	ecx, DWORD PTR [eax+1]
$LL6@CompileFro:
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL6@CompileFro
	sub	eax, ecx
	push	ebx
	mov	DWORD PTR tv138[ebp], eax
	lea	eax, DWORD PTR _errors$[ebp]
	push	eax
	lea	eax, DWORD PTR _tmpVS$[ebp]
	push	eax
	push	esi
	push	edi
	call	_D3DXGetVertexShaderProfile@4
	push	eax
	push	OFFSET ??_C@_07IOPKFNAJ@vs_main?$AA@
	push	ebx
	push	ebx
	push	DWORD PTR tv138[ebp]
	push	DWORD PTR _vsShaderCode$[ebp]
	call	_D3DXCompileShader@40
	test	eax, eax
	jge	SHORT $LN1@CompileFro

; 35   :     {
; 36   :         OutputDebugString( (char*)errors->GetBufferPointer() );

	mov	eax, DWORD PTR _errors$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+12]
	push	eax
	call	DWORD PTR __imp__OutputDebugStringA@4

; 37   :         errors->Release();

	mov	eax, DWORD PTR _errors$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]

; 38   :         DebugBreak();

	call	DWORD PTR __imp__DebugBreak@0
$LN1@CompileFro:

; 39   :     }
; 40   :     #endif
; 41   : 	d3dDevice->CreateVertexShader( (DWORD *)tmpVS->GetBufferPointer(), &vsShader);

	mov	ebx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edi]
	lea	eax, DWORD PTR [ebx+4]
	push	eax
	mov	eax, DWORD PTR _tmpVS$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+12]
	push	eax
	push	edi
	call	DWORD PTR [esi+364]

; 42   :     d3dDevice->CreatePixelShader( (DWORD*)tmpPS->GetBufferPointer(), &psShader );

	mov	eax, DWORD PTR _tmpPS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, DWORD PTR [edi]
	push	ebx
	push	eax
	call	DWORD PTR [ecx+12]
	push	eax
	push	edi
	call	DWORD PTR [esi+424]
	pop	edi
	pop	esi
	pop	ebx

; 43   : }

	leave
	ret	12					; 0000000cH
?CompileFromStream@Shader@@QAEXPAUIDirect3DDevice9@@PBD1@Z ENDP ; Shader::CompileFromStream
_TEXT	ENDS
END
